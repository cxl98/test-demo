synchronized锁:
一.偏向锁:
   1.初始化匿名偏向状态->使用cas命令,将对象头中的thread id 改为当前线程(如果成功，获取当偏向锁，如果不成功则升级成轻量级锁)
   2.lock record
   3.如果有多个线程来竞争这把锁，加要升级成轻量级锁(但是在升级成轻量级锁之前,要先解锁,将原来持有锁的线程的lock record 变成unlock)
二.轻量级锁：
   1.首先看当前锁是否有存活线程占用,没有的情况下，则改变锁的标识为01(无锁)，此时在当前线程中记录一个lock record，拷贝当前对象的对象头数据到lock record
   2.拷贝成功之后，使用cas操作尝试把对象中lock record指针指向改动后的lock record ，并且lock record 中的一个指针只想当前对象
   3.上述操作完成之后，那么这个线程就拥有这把锁。并且将锁标识改为00(轻量级锁)
   4.如果未成功，就检查lock record 指针,指向的是是否是当前线程，如果是则表示当前的线程已经获取到锁，如果不是，则表示其他线程获取到了锁，此时，进入自旋等待。
   如果当前自旋等待大于一个值或者有其他线程在自旋过程再一次请求这把锁，那么就升级为重量级锁
三.重量级锁
   1.